#! /bin/sh

. panel_colors

num_mon=$(bspc query -M | wc -l)
underline="%{-u}"
reset="%{B-}%{F-}%{U-}"
ws_space=" "

while read -r line ; do
	case $line in
		T*)
			# time output
			time="$underline${line#?}$reset"
			;;

		N*)
			# network output
			network="$underline%{A:nm-connection-editor:}${line#?}%{A}$reset"
			;;

		V*)
			increase_vol="pactl -- set-sink-volume 0 +5%; panel_volume"
			decrease_vol="pactl -- set-sink-volume 0 -5%; panel_volume"
			mute_vol="pactl set-sink-mute 0 toggle; panel_volume"
      # volume output
			volume="$underline%{A1:${increase_vol}:}%{A2:${mute_vol}:}%{A3:${decrease_vol}:}${line#?}%{A}%{A}%{A}$reset"
			;;

		L*)
			# playerctl - music output
			playerctl="%{A:playerctl play-pause:}${line#?}%{A}$reset"
			;;

		M*)
			# memory output
			mem="$underline${line#?}$reset"
			;;

		C*)
			# cpu output
			cpu="$underline${line#?}$reset"
			;;

		W*)
			# bspwm's state
			wm=
			IFS=':'
			set -- ${line#?}
			while [ $# -gt 0 ] ; do
				item=$1
				name=${item#?}
				case $item in
					[mM]*)
						case $item in
							m*)
								# monitor
								FG=$COLOR_MONITOR_FG
								BG=$COLOR_MONITOR_BG
								on_focused_monitor=
								;;
							M*)
								# focused monitor
								FG=$COLOR_FOCUSED_MONITOR_FG
								BG=$COLOR_FOCUSED_MONITOR_BG
								on_focused_monitor=1
								;;
						esac
						[ $num_mon -lt 2 ] && shift && continue
						wm="${wm}%{F${FG}}%{B${BG}}%{A:bspc monitor -f ${name}:} ${name} %{A}%{B-}%{F-}%{-u}"
						;;
					[fFoOuU]*)
						case $item in
							f*)
								# free desktop
								FG=$COLOR_FREE_FG
								BG=$COLOR_FREE_BG
								UL=$BG
								;;
							F*)
								if [ "$on_focused_monitor" ] ; then
									# focused free desktop
									FG=$COLOR_FOCUSED_FREE_FG
									BG=$COLOR_FOCUSED_FREE_BG
									UL=$BG
								else
									# active free desktop
									FG=$COLOR_FREE_FG
									BG=$COLOR_FREE_BG
									UL=$COLOR_FOCUSED_FREE_BG
								fi
								;;
							o*)
								# occupied desktop
								FG=$COLOR_OCCUPIED_FG
								BG=$COLOR_OCCUPIED_BG
								UL=$BG
								;;
							O*)
								if [ "$on_focused_monitor" ] ; then
									# focused occupied desktop
									FG=$COLOR_FOCUSED_OCCUPIED_FG
									BG=$COLOR_FOCUSED_OCCUPIED_BG
									UL=$BG
								else
									# active occupied desktop
									FG=$COLOR_OCCUPIED_FG
									BG=$COLOR_OCCUPIED_BG
									UL=$BG
								fi
								;;
							u*)
								# urgent desktop
								FG=$COLOR_URGENT_FG
								BG=$COLOR_URGENT_BG
								UL=$BG
								;;
							U*)
								if [ "$on_focused_monitor" ] ; then
									# focused urgent desktop
									FG=$COLOR_FOCUSED_URGENT_FG
									BG=$COLOR_FOCUSED_URGENT_BG
									UL=$BG
								else
									# active urgent desktop
									FG=$COLOR_URGENT_FG
									BG=$COLOR_URGENT_BG
									UL=$COLOR_FOCUSED_URGENT_BG
								fi
								;;
						esac
						wm="${wm}%{F${FG}}%{B${BG}}%{U${UL}}$underline%{A:bspc desktop -f ${name}:}$ws_space${name}$ws_space%{A}%{B-}%{F-}%{-u}"
						;;
					[LTG]*)
						# layout, state and flags
						#wm="${wm}%{F$COLOR_STATE_FG}%{B$COLOR_STATE_BG} ${name} %{B-}%{F-}"
						;;
				esac
				shift
			done
			;;
	esac


	tray_space="%{B$COLOR_BLOCK}%{U$COLOR_TRAY}$underline       %{U-}%{-u}%{B-}"
  seperator="%{B$BLACK} $reset"

	printf "%s\n" "%{l}${wm} ${playerctl}%{r}${seperator}${time} ${mem} ${cpu} ${network} ${volume} ${tray_space}"
	sleep 0.01;
done
